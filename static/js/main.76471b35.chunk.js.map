{"version":3,"sources":["store/index.js","store/studentsReducer.js","store/actions.js","store/coursesReducer.js","store/queryCoursesReducer.js","store/queryStudentsReducer.js","store/isActiveFormReducer.js","store/isActiveFormCoursesReduser.js","components/home/home.js","store/selectors.js","components/course/course.js","components/coursesList/coursesList.js","components/courses/courses.js","components/student/student.js","components/studentsList/StudentsList.js","components/students/students.js","App.js","api/loadApi.js","index.js"],"names":["rootReducer","combineReducers","students","action","type","filter","student","_id","id","name","email","isActive","course","courses","course_id","queryCourse","queryStudent","isActiveForm","isActiveFormCourses","store","createStore","applyMiddleware","thunk","Home","className","getStudents","state","getCourses","getQueryCourse","getQueryStudent","getDeleteStudents","getDeleteCourses","getIsActiveForm","getIsActiveCoursesForm","mapDispatchToProps","handleDeleteCourse","connect","code","onClick","xmlns","fill","viewBox","width","height","d","CoursesList","map","replace","key","setQuery","setIsActiveCoursesForm","setNewCourse","setHasErrorCourse","hasErrorCourse","useState","inputQuery","setInputQuery","nameValue","setNameValue","codeValue","setCodeValue","location","useLocation","history","useHistory","debouncedSetQuery","debounce","historyPush","push","search","searchParams","toString","coursesAfterQuery","item","toLowerCase","includes","URLSearchParams","sortedCourses","sortParam","get","sort","a","b","localeCompare","Form","Row","Col","Control","placeholder","value","onChange","evt","target","set","trim","fill-rule","clip-rule","onSubmit","event","preventDefault","param","deleteStu","status","StudentsList","setNewStudent","Math","random","substr","setIsActiveForm","emailValue","setEmailValue","statusValue","setStatusValue","courseValue","setCourseValue","studentsAfterQuery","sortedStudents","sortStudents","loadStudentsAndCourses","dispatch","async","Promise","all","fetch","then","response","json","catch","studentsFromServer","coursesFromServer","find","course__id","first","last","useEffect","to","Button","variant","exact","path","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.76471b35.chunk.js","sourcesContent":["import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { studentsReducer } from './studentsReducer';\nimport { coursesReducer } from './coursesReducer';\nimport { queryCoursesReducer } from './queryCoursesReducer';\nimport { queryStudentsReducer } from './queryStudentsReducer';\nimport { isActiveFormReducer } from './isActiveFormReducer';\nimport { isActiveCoursesFormReducer } from './isActiveFormCoursesReduser';\n\nconst rootReducer =  combineReducers({\n  students: studentsReducer,\n  courses: coursesReducer,\n  queryCourse: queryCoursesReducer,\n  queryStudent: queryStudentsReducer,\n  isActiveForm: isActiveFormReducer,\n  isActiveFormCourses: isActiveCoursesFormReducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import { LOAD_STUDENTS_SUCCESS, DELETE_STUDENT, ADD_NEW_STUDENT } from './actions';\n\nexport const studentsReducer = (students = '', action) => {\n  switch (action.type) {\n    case LOAD_STUDENTS_SUCCESS:\n      return action.students;\n\n    case DELETE_STUDENT:\n      return students.filter(student => student._id !== action.id);\n\n    case ADD_NEW_STUDENT:\n      return [\n        {\n          name: action.name,\n          email: action.email,\n          isActive: action.isActive,\n          course: action.course,\n          _id: action.id\n        },\n        ...students,\n      ];\n\n    default:\n      return students;\n  }\n};\n","import { getCourses, getStudents } from '../api/loadApi';\n\nexport const LOAD_STUDENTS_SUCCESS = 'LOAD_STUDENTS_SUCCESS';\nexport const LOAD_COURSES_SUCCESS = 'LOAD_COURSES_SUCCESS';\nexport const CHANGE_QUERY_COURSE = 'CHANGE_QUERY_COURSE';\nexport const CHANGE_QUERY_STUDENT = 'CHANGE_QUERY_STUDENT';\nexport const DELETE_STUDENT = 'DELETE_STUDENT';\nexport const DELETE_COURSE = 'DELETE_COURSE';\nexport const CHANGE_NAME = 'CHANGE_NAME';\nexport const ADD_NEW_STUDENT = 'ADD_NEW_STUDENT';\nexport const ADD_NEW_COURSE = 'ADD_NEW_COURSE';\nexport const FORM_IS_ACTIVE = 'FORM_IS_ACTIVE';\nexport const FORM_COURSES_IS_ACTIVE = 'FORM_COURSES_IS_ACTIVE';\n\nconst loadStudentsSuccess = students => ({\n  type: LOAD_STUDENTS_SUCCESS, students,\n});\n\nconst loadCoursesSuccess = courses => ({\n  type: LOAD_COURSES_SUCCESS, courses,\n});\n\nexport const changeQueryCourse = queryCourse => ({\n  type: CHANGE_QUERY_COURSE, queryCourse,\n});\n\nexport const changeQueryStudent = queryStudent => ({\n  type: CHANGE_QUERY_STUDENT, queryStudent,\n});\n\nexport const deleteStudent = id => ({\n  type: DELETE_STUDENT, id,\n});\n\nexport const deleteCourse = id => ({\n  type: DELETE_COURSE, id,\n});\n\nexport const toggleForm = () => ({\n  type: FORM_IS_ACTIVE,\n});\n\nexport const toggleFormCourses = () => ({\n  type: FORM_COURSES_IS_ACTIVE,\n});\n\nexport const addNewStudent =  (name, email, isActive, course) => ({\n  type: ADD_NEW_STUDENT,\n  name,\n  email,\n  isActive,\n  course,\n  id: '_' + Math.random().toString(36).substr(2, 9),\n});\n\nexport const addNewCourse =  (course, id) => ({\n  type: ADD_NEW_COURSE, course, id\n});\n\nexport const loadData = () => async (dispatch) => {\n\n  const [\n    studentsFromServer,\n    coursesFromServer\n  ] = await Promise.all([\n    getStudents(),\n    getCourses(),\n  ]);\n\n  dispatch(loadStudentsSuccess(studentsFromServer.map(student => (\n    {\n      ...student,\n      course: coursesFromServer.find(course => course.course_id === student.course__id).course,\n      name: `${student.name.first} ${student.name.last} `\n    }))));\n\n  dispatch(loadCoursesSuccess(coursesFromServer));\n};\n","import {\n  LOAD_COURSES_SUCCESS,\n  DELETE_COURSE,\n  ADD_NEW_COURSE,\n} from './actions';\n\nexport const coursesReducer = (courses = '', action) => {\n  switch (action.type) {\n    case LOAD_COURSES_SUCCESS:\n      return action.courses;\n    case ADD_NEW_COURSE:\n      return [\n        {\n          course: action.course,\n          course_id: action.id,\n        },\n        ...courses,\n      ];\n    case DELETE_COURSE:\n      return courses.filter(course => course.course_id !== action.id);\n    default:\n      return courses;\n  }\n};\n","import { CHANGE_QUERY_COURSE } from './actions';\n\nexport const queryCoursesReducer = (queryCourse = '', action) => {\n  if (action.type === CHANGE_QUERY_COURSE) {\n    return action.queryCourse;\n  } else {\n    return queryCourse;\n  }\n};\n","import { CHANGE_QUERY_STUDENT } from './actions';\n\nexport const queryStudentsReducer = (queryStudent = '', action) => {\n  if (action.type === CHANGE_QUERY_STUDENT) {\n    return action.queryStudent;\n  } else {\n    return queryStudent;\n  }\n};\n","import { FORM_IS_ACTIVE } from '../store/actions';\n\nexport const isActiveFormReducer = (\n  isActiveForm = false, action\n) => {\n  if (action.type === FORM_IS_ACTIVE) {\n    return !isActiveForm;\n  } else {\n    return isActiveForm;\n  }\n};\n","import { FORM_COURSES_IS_ACTIVE } from '../store/actions';\n\nexport const isActiveCoursesFormReducer = (\n  isActiveFormCourses = false, action\n) => {\n  if (action.type === FORM_COURSES_IS_ACTIVE) {\n    return !isActiveFormCourses;\n  } else {\n    return isActiveFormCourses;\n  }\n};\n","import React from 'react';\nimport './home.scss'\n\nconst Home = () => {\n  return (\n    <section className=\"main__text\">\n      <h2>Welcome!</h2>\n      <article>\n        <p className=\"main__paragraph\">\n          \"Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...\"\n          \"Нет никого, кто любил бы боль саму по себе, кто искал бы её и кто хотел бы иметь её просто потому, что это боль..\"\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis et felis suscipit, faucibus ante id, laoreet tortor.\n          Aliquam eu nisi tincidunt lorem eleifend ultricies. Suspendisse interdum maximus sollicitudin. Aenean sit amet lacus magna.\n          Curabitur cursus maximus neque, at dignissim erat luctus a. Morbi cursus sem magna, non pellentesque magna rhoncus eu.\n          Mauris nec felis vel neque auctor pretium ut sit amet augue.\n        </p>\n        <p className=\"main__paragraph\">\n          Ut id lorem vitae nunc aliquam lacinia. Ut libero risus, lobortis vel vulputate vulputate, feugiat quis dolor.\n          Pellentesque a mollis libero. Duis non fringilla sapien, quis congue sem. Quisque eget ante ultricies, volutpat est a,\n          placerat lorem. Morbi pulvinar massa quis nisi aliquam egestas. Cras consequat felis ut egestas sodales. Nulla consectetur,\n          eros non porta rhoncus, nisi leo dapibus tellus, at vulputate massa est quis felis.\n        </p>\n      </article>\n    </section>\n  );\n};\n\nexport default Home;\n","export const getStudents = state => state.students;\nexport const getCourses = state => state.courses;\nexport const getQueryCourse = state => state.queryCourse;\nexport const getQueryStudent = state => state.queryStudent;\nexport const getDeleteStudents = state => state.students;\nexport const getDeleteCourses = state => state.courses;\nexport const getIsActiveForm = state => state.isActiveForm;\nexport const getIsActiveCoursesForm = state => state.isActiveFormCourses;\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getDeleteCourses } from '../../store/selectors';\nimport { deleteCourse } from '../../store/actions';\n\nconst Course = ({ id, name, code, handleDeleteCourse }) => {\n  return(\n      <div className=\"table__row\">\n        <div\n          className=\"table__ceil\"\n        >\n          {name}</div>\n        <div className=\"table__ceil\">{code}</div>\n        <div className=\"table__ceil\">\n          <button\n            className=\"table__button\"\n            onClick={() => handleDeleteCourse(id)}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\"><path d=\"M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z\"/></svg>\n          </button>\n        </div>\n      </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  courses: getDeleteCourses(state)\n});\n\nconst mapDispatchToProps = ({\n  handleDeleteCourse: deleteCourse\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Course);\n","import React from 'react';\nimport Course from '../course/course';\n\nconst CoursesList = ({courses}) => {\n  return(\n    <>\n      {\n        courses.map(course => (\n          <Course\n            name={course.course}\n            code={course.course_id.replace(/_/, '')}\n            key={course.course_id}\n            id={course.course_id}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default CoursesList;\n","import React, { useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { connect } from 'react-redux';\nimport { Form, Col } from 'react-bootstrap';\nimport CoursesList from '../coursesList/coursesList';\nimport {\n  getIsActiveCoursesForm,\n  getQueryCourse,\n} from '../../store/selectors';\nimport {\n  addNewCourse,\n  changeQueryCourse,\n  toggleFormCourses,\n} from '../../store/actions';\nimport {\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport './courses.scss';\n\nconst Courses = ({ courses, setQuery, queryCourse, setNewCourse, setIsActiveCoursesForm, isActiveFormCourses, setHasErrorCourse, hasErrorCourse}) => {\n  const [inputQuery, setInputQuery] = useState('');\n  const [nameValue, setNameValue] = useState('');\n  const [codeValue, setCodeValue] = useState('');\n  const location = useLocation();\n  const history = useHistory();\n\n  const debouncedSetQuery = debounce(setQuery, 1000);\n\n  const handleChangeQuery = (evt) => {\n    debouncedSetQuery(evt.target.value);\n    setInputQuery(evt.target.value);\n    searchParams.set('query', evt.target.value.trim().toLowerCase());\n    historyPush();\n  };\n\n  const historyPush = debounce(() => {\n    history.push({ search: searchParams.toString() });\n  }, 1000);\n\n  const coursesAfterQuery = !queryCourse\n    ? courses\n    : courses.filter(item => item.course.toLowerCase()\n        .includes(queryCourse.toLowerCase()));\n\n  const searchParams = new URLSearchParams(location.search);\n\n  let sortedCourses = '';\n\n  const sortParam = searchParams.get('sort');\n\n  if (sortParam) {\n    sortedCourses\n      = (typeof courses[0][sortParam] === 'number'\n      || typeof courses[0][sortParam] === 'boolean')\n      ? [...coursesAfterQuery]\n        .sort((a, b) => (a[sortParam] - b[sortParam])\n          * (searchParams.get('orderOfSorting') === 'asc' ? 1 : -1))\n      : [...coursesAfterQuery]\n        .sort((a, b) => (a[sortParam].localeCompare(b[sortParam]))\n          * (searchParams.get('orderOfSorting') === 'asc' ? 1 : -1));\n  } else {\n    sortedCourses = coursesAfterQuery;\n  }\n\n  const sortCourses = (param) => {\n    searchParams.set('sort', param);\n\n    if (searchParams.get('sort') === param\n      && searchParams.get('orderOfSorting') === 'asc') {\n      searchParams.set('orderOfSorting', 'desc');\n    } else {\n      searchParams.set('orderOfSorting', 'asc');\n    }\n\n    history.push({ search: searchParams.toString() });\n  };\n\n  const handlerFormSubmit = (event) => {\n    event.preventDefault();\n    if(!nameValue || !codeValue) {\n      return;\n    }\n    setNewCourse(nameValue, codeValue);\n\n  };\n\n  return (\n    <section className=\"courses\">\n      <div className=\"table\">\n        <Form\n          className=\"query\"\n        >\n          <Form.Row>\n            <Col>\n              <Form.Control\n                className=\"query__input\"\n                placeholder=\"Search...\"\n                type=\"text\"\n                value={inputQuery}\n                onChange={handleChangeQuery}\n              />\n            </Col>\n          </Form.Row>\n        </Form>\n        <div className=\"courses__add\">\n          {isActiveFormCourses ? (\n            <>\n              <button\n                className=\"students__activation_form\"\n                onClick={setIsActiveCoursesForm}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill-rule=\"evenodd\" clip-rule=\"evenodd\">\n                  <path d=\"M11.5 0c6.347 0 11.5 5.153 11.5 11.5s-5.153 11.5-11.5 11.5-11.5-5.153-11.5-11.5 5.153-11.5\n              11.5-11.5zm0 1c5.795 0 10.5 4.705 10.5 10.5s-4.705 10.5-10.5 10.5-10.5-4.705-10.5-10.5 4.705-10.5\n              10.5-10.5zm-6.5 10h13v1h-13v-1z\"/>\n                </svg>\n              </button>\n              <Form\n                className=\"students__form\"\n                onSubmit={handlerFormSubmit}\n              >\n                <Form.Row>\n                <Col>\n                  <Form.Control\n                    type=\"text\"\n                    onChange={(event) => setNameValue(event.target.value)}\n                    value={nameValue}\n                    placeholder=\"Write Name\"\n                  />\n                </Col>\n\n                <Col>\n                  <Form.Control\n                    type=\"text\"\n                    onChange={(event) => setCodeValue(event.target.value)}\n                    value={codeValue}\n                    placeholder=\"Write Code\"\n                  />\n                </Col>\n                <Col>\n                  <Form.Control\n                    type=\"submit\"\n                  />\n                </Col>\n              </Form.Row>\n            </Form>\n            </>\n          ) : (\n            <button\n              className=\"students__activation_form students__button\"\n              onClick={setIsActiveCoursesForm}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill-rule=\"evenodd\" clip-rule=\"evenodd\">\n                <path d=\"M11.5 0c6.347 0 11.5 5.153 11.5 11.5s-5.153 11.5-11.5 11.5-11.5-5.153-11.5-11.5 5.153-11.5\n            11.5-11.5zm0 1c5.795 0 10.5 4.705 10.5 10.5s-4.705 10.5-10.5 10.5-10.5-4.705-10.5-10.5 4.705-10.5\n            10.5-10.5zm.5 10h6v1h-6v6h-1v-6h-6v-1h6v-6h1v6z\"/>\n              </svg>\n            </button>\n          )}\n        </div>\n\n          <div className=\"table__row\">\n            <div\n              className=\"table__ceil sort\"\n              onClick={() => sortCourses('course')}\n            >\n              COURSE\n            </div>\n            <div\n              className=\"table__ceil\"\n            >\n             CODE\n            </div>\n            <div\n              className=\"table__ceil\"\n            >\n              ACTION\n            </div>\n          </div>\n\n          <CoursesList courses={sortedCourses}/>\n\n      </div>\n    </section>\n  );\n};\nconst mapStateToProps = state => ({\n  queryCourse: getQueryCourse(state),\n  courses: state.courses,\n  isActiveFormCourses: getIsActiveCoursesForm(state),\n});\n\nconst mapDispatchToProps = ({\n  setQuery: changeQueryCourse,\n  setIsActiveCoursesForm: toggleFormCourses,\n  setNewCourse: addNewCourse,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Courses);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { deleteStudent } from '../../store/actions';\nimport { getDeleteStudents } from '../../store/selectors';\n\nconst Student = ({ id, name, email, status, course, deleteStu }) => {\n\n  return(\n    <div className=\"table__row\">\n      <div\n        className=\"table__ceil\"\n      >\n        {name}\n      </div>\n      <div\n        className=\"table__ceil\"\n      >\n        {email}\n      </div>\n      <div className=\"table__ceil\">{status ? 'Active' : 'Inactive'}</div>\n      <div className=\"table__ceil\">{course}</div>\n      <div className=\"table__ceil\">\n        <button\n          className=\"table__button\"\n          onClick={()=>{deleteStu(id)}}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\"><path d=\"M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z\"/></svg>\n        </button>\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  students: getDeleteStudents(state),\n});\n\nconst mapDispatchToProps = ({\n  deleteStu: deleteStudent,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Student);\n","import React from 'react';\nimport Student from '../student/student';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst StudentsList = ({students}) => {\n  return(\n    <>\n      {\n        students.map(student => (\n          <Student\n            name={student.name}\n            email={student.email}\n            status={student.isActive}\n            course={student.course}\n            id={student._id}\n            key={student._id}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default StudentsList;\n","import React, { useState } from 'react';\nimport { Form, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport StudentsList from '../studentsList/StudentsList';\nimport debounce from 'lodash/debounce';\nimport { getIsActiveForm, getQueryStudent } from '../../store/selectors';\nimport { changeQueryStudent, addNewStudent, toggleForm } from '../../store/actions';\nimport {\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport './students.scss';\n\nconst Students = ({students, queryStudent, setQuery, setNewStudent, isActiveForm, setIsActiveForm }) => {\n  const [inputQuery, setInputQuery] = useState('');\n  const [nameValue, setNameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const [statusValue, setStatusValue] = useState('');\n  const [courseValue, setCourseValue] = useState('');\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const debouncedSetQuery = debounce(setQuery, 1000);\n\n  const handleChangeQuery = (evt) => {\n    debouncedSetQuery(evt.target.value);\n    setInputQuery(evt.target.value);\n    searchParams.set('query', evt.target.value.trim().toLowerCase());\n    historyPush();\n  };\n\n  const studentsAfterQuery = !queryStudent\n    ? students\n    : students.filter(item => item.name.toLowerCase()\n        .includes(queryStudent.toLowerCase()));\n\n  const searchParams = new URLSearchParams(location.search);\n\n  let sortedStudents = '';\n\n  const sortParam = searchParams.get('sort');\n\n  if (sortParam) {\n    sortedStudents\n      = (typeof students[0][sortParam] === 'number'\n      || typeof students[0][sortParam] === 'boolean')\n      ? [...studentsAfterQuery]\n        .sort((a, b) => (a[sortParam] - b[sortParam])\n          * (searchParams.get('orderOfSorting') === 'asc' ? 1 : -1))\n      : [...studentsAfterQuery]\n        .sort((a, b) => (a[sortParam].localeCompare(b[sortParam]))\n          * (searchParams.get('orderOfSorting') === 'asc' ? 1 : -1));\n  } else {\n    sortedStudents = studentsAfterQuery;\n  }\n\n  const historyPush = debounce(() => {\n    history.push({ search: searchParams.toString() });\n  }, 1000);\n\n  const sortStudents = (param) => {\n    searchParams.set('sort', param);\n\n    if (searchParams.get('sort') === param\n      && searchParams.get('orderOfSorting') === 'asc') {\n      searchParams.set('orderOfSorting', 'desc');\n    } else {\n      searchParams.set('orderOfSorting', 'asc');\n    }\n\n    history.push({ search: searchParams.toString() });\n  };\n\n  const handlerFormSubmit = (event) => {\n    event.preventDefault();\n    if(!nameValue || !emailValue || !statusValue || !courseValue) {\n      return;\n    }\n    setNewStudent(nameValue,emailValue,statusValue,courseValue);\n  };\n\n    return(\n    <section className=\"students\">\n      <div className=\"table\">\n        <Form\n          className=\"students__query query\"\n        >\n          <Form.Row>\n            <Col>\n              <Form.Control\n                className=\"query__input\"\n                placeholder=\"Search...\"\n                type=\"text\"\n                value={inputQuery}\n                onChange={handleChangeQuery}\n              />\n            </Col>\n          </Form.Row>\n        </Form>\n\n        <div className=\"add\">\n        {isActiveForm ? (\n          <div className=\"students__form_container\">\n            <button\n              className=\"students__activation_form\"\n              onClick={setIsActiveForm}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill-rule=\"evenodd\" clip-rule=\"evenodd\">\n                <path d=\"M11.5 0c6.347 0 11.5 5.153 11.5 11.5s-5.153 11.5-11.5 11.5-11.5-5.153-11.5-11.5 5.153-11.5\n              11.5-11.5zm0 1c5.795 0 10.5 4.705 10.5 10.5s-4.705 10.5-10.5 10.5-10.5-4.705-10.5-10.5 4.705-10.5\n              10.5-10.5zm-6.5 10h13v1h-13v-1z\"/>\n              </svg>\n            </button>\n            <Form\n              className=\"students__form\"\n              onSubmit={handlerFormSubmit}\n            >\n\n              <Form.Row>\n                <Col>\n                  <Form.Control\n                    type=\"text\"\n                    onChange={(event) => setNameValue(event.target.value)}\n                    value={nameValue}\n                    placeholder=\"Write Name\"\n                  />\n                </Col>\n\n                <Col>\n                  <Form.Control\n                    type=\"email\"\n                    onChange={(event) => setEmailValue(event.target.value)}\n                    placeholder=\"Write Email\"\n                    value={emailValue}\n                  />\n                </Col>\n\n                <Col>\n                  <Form.Control\n                    onChange={(event) => setStatusValue(event.target.value)}\n                    value={statusValue}\n                    type=\"text\"\n                    placeholder=\"Write Status\"\n                  />\n                </Col>\n\n                <Col>\n                  <Form.Control\n                    onChange={(event) => setCourseValue(event.target.value)}\n                    value={courseValue}\n                    type=\"text\"\n                    placeholder=\"Write Course\"\n                  />\n                </Col>\n\n                <Col>\n                  <Form.Control\n                    type=\"submit\"\n                  />\n                </Col>\n              </Form.Row>\n\n\n            </Form>\n          </div>\n        ) : (\n          <button\n            className=\"students__activation_form students__button\"\n            onClick={setIsActiveForm}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill-rule=\"evenodd\" clip-rule=\"evenodd\">\n              <path d=\"M11.5 0c6.347 0 11.5 5.153 11.5 11.5s-5.153 11.5-11.5 11.5-11.5-5.153-11.5-11.5 5.153-11.5\n            11.5-11.5zm0 1c5.795 0 10.5 4.705 10.5 10.5s-4.705 10.5-10.5 10.5-10.5-4.705-10.5-10.5 4.705-10.5\n            10.5-10.5zm.5 10h6v1h-6v6h-1v-6h-6v-1h6v-6h1v6z\"/>\n            </svg>\n          </button>\n        )}\n        </div>\n        <div className=\"table__row table__head\">\n          <div\n            onClick={() => sortStudents('name')}\n            className=\"table__ceil sort\"\n          >\n            NAME\n          </div>\n          <div\n            onClick={() => sortStudents('email')}\n            className=\"table__ceil sort\"\n          >\n            EMAIL\n          </div>\n          <div\n            onClick={() => sortStudents('isActive')}\n            className=\"table__ceil sort\"\n          >\n            STATUS\n          </div>\n          <div\n            onClick={() => sortStudents('course')}\n            className=\"table__ceil sort\"\n          >\n            COURSE\n          </div>\n          <div\n            className=\"table__ceil\"\n          >\n            ACTION\n          </div>\n        </div>\n\n        <StudentsList\n          students={sortedStudents}\n        />\n\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  queryStudent: getQueryStudent(state),\n  students: state.students,\n  isActiveForm: getIsActiveForm(state),\n});\n\nconst mapDispatchToProps = ({\n  setQuery: changeQueryStudent,\n  setNewStudent: addNewStudent,\n  setIsActiveForm: toggleForm,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Students);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport Home from './components/home/home';\nimport Courses from './components/courses/courses';\nimport Students from './components/students/students';\nimport { loadData} from './store/actions';\nimport { getStudents, getCourses } from './store/selectors';\nimport { Button } from 'react-bootstrap';\nimport './App.scss';\n\nfunction App({loadStudentsAndCourses, students, courses }) {\n\n  useEffect( () => {\n    loadStudentsAndCourses();\n  }, []);\n\n  return (\n    <section className=\"body\">\n        <nav className=\"nav\">\n          <ul className=\"nav__list\">\n            <li className=\"nav__item\">\n              <NavLink\n                to=\"/\"\n                className=\"nav__link\"\n              >\n                <Button variant=\"light\">Home</Button>\n              </NavLink>\n            </li>\n\n            <li className=\"nav__item\">\n              <NavLink\n                to=\"/courses\"\n                className=\"nav__link\"\n                courses={courses}\n              >\n                <Button variant=\"light\">Courses</Button>\n              </NavLink>\n            </li>\n\n            <li className=\"nav__item\">\n              <NavLink\n                to=\"/students\"\n                className=\"nav__link\"\n              >\n                <Button variant=\"light\">Students</Button>\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n        <main className=\"main\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Route path=\"/courses\">\n            <Courses\n              courses={courses}\n            />\n          </Route>\n\n          <Route path=\"/students\">\n            <Students\n              students={students}\n            />\n          </Route>\n        </Switch>\n        </main>\n    </section>\n  );\n}\n\nconst mapStateToProps  = state => ({\n  students: getStudents(state),\n  courses: getCourses(state),\n});\nconst mapDispatchToProps = ({\n  loadStudentsAndCourses: loadData,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","export const getStudents = () => fetch('https://api.myjson.com/bins/lhxgm')\n  .then(response => response.json())\n  .catch(() => 'Something wrong');\n\nexport const getCourses = () => fetch('https://api.myjson.com/bins/1gocva')\n  .then(response => response.json())\n  .catch(() => 'Something wrong');\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/index';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/path\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}