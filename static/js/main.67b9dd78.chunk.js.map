{"version":3,"sources":["store/index.js","store/studentsReducer.js","store/actions.js","store/coursesReducer.js","store/queryCoursesReducer.js","store/queryStudentsReducer.js","store/isActiveFormReducer.js","store/isActiveFormCoursesReduser.js","components/home/home.js","store/selectors.js","components/course/course.js","components/coursesList/coursesList.js","components/courses/courses.js","components/student/student.js","components/studentsList/StudentsList.js","components/students/students.js","App.js","api/loadApi.js","index.js"],"names":["rootReducer","combineReducers","students","action","type","filter","student","_id","id","name","email","isActive","course","courses","course_id","queryCourse","queryStudent","isActiveForm","isActiveFormCourses","store","createStore","applyMiddleware","thunk","Home","getStudents","state","getCourses","getQueryCourse","getQueryStudent","getDeleteStudents","getDeleteCourses","getIsActiveForm","getIsActiveCoursesForm","mapDispatchToProps","handleDeleteCourse","connect","code","className","onClick","CoursesList","map","replace","key","setQuery","setIsActiveCoursesForm","setNewCourse","setHasErrorCourse","hasErrorCourse","useState","inputQuery","setInputQuery","nameValue","setNameValue","codeValue","setCodeValue","location","useLocation","history","useHistory","debouncedSetQuery","debounce","historyPush","push","search","searchParams","toString","coursesAfterQuery","item","toLowerCase","includes","URLSearchParams","sortedCourses","sortParam","get","sort","a","b","localeCompare","onSubmit","event","preventDefault","htmlFor","onChange","target","value","placeholder","evt","set","trim","param","deleteStu","status","StudentsList","setNewStudent","Math","random","substr","setIsActiveForm","emailValue","setEmailValue","statusValue","setStatusValue","courseValue","setCourseValue","studentsAfterQuery","sortedStudents","sortStudents","loadStudentsAndCourses","dispatch","async","Promise","all","fetch","then","response","json","catch","studentsFromServer","coursesFromServer","find","course__id","first","last","useEffect","to","exact","path","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.67b9dd78.chunk.js","sourcesContent":["import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { studentsReducer } from './studentsReducer';\nimport { coursesReducer } from './coursesReducer';\nimport { queryCoursesReducer } from './queryCoursesReducer';\nimport { queryStudentsReducer } from './queryStudentsReducer';\nimport { isActiveFormReducer } from './isActiveFormReducer';\nimport { isActiveCoursesFormReducer } from './isActiveFormCoursesReduser';\n\nconst rootReducer =  combineReducers({\n  students: studentsReducer,\n  courses: coursesReducer,\n  queryCourse: queryCoursesReducer,\n  queryStudent: queryStudentsReducer,\n  isActiveForm: isActiveFormReducer,\n  isActiveFormCourses: isActiveCoursesFormReducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import { LOAD_STUDENTS_SUCCESS, DELETE_STUDENT, ADD_NEW_STUDENT } from './actions';\n\nexport const studentsReducer = (students = '', action) => {\n  switch (action.type) {\n    case LOAD_STUDENTS_SUCCESS:\n      return action.students;\n\n    case DELETE_STUDENT:\n      return students.filter(student => student._id !== action.id);\n\n    case ADD_NEW_STUDENT:\n      return [\n        {\n          name: action.name,\n          email: action.email,\n          isActive: action.isActive,\n          course: action.course,\n          _id: action.id\n        },\n        ...students,\n      ];\n\n    default:\n      return students;\n  }\n};\n","import { getCourses, getStudents } from '../api/loadApi';\n\nexport const LOAD_STUDENTS_SUCCESS = 'LOAD_STUDENTS_SUCCESS';\nexport const LOAD_COURSES_SUCCESS = 'LOAD_COURSES_SUCCESS';\nexport const CHANGE_QUERY_COURSE = 'CHANGE_QUERY_COURSE';\nexport const CHANGE_QUERY_STUDENT = 'CHANGE_QUERY_STUDENT';\nexport const DELETE_STUDENT = 'DELETE_STUDENT';\nexport const DELETE_COURSE = 'DELETE_COURSE';\nexport const CHANGE_NAME = 'CHANGE_NAME';\nexport const ADD_NEW_STUDENT = 'ADD_NEW_STUDENT';\nexport const ADD_NEW_COURSE = 'ADD_NEW_COURSE';\nexport const FORM_IS_ACTIVE = 'FORM_IS_ACTIVE';\nexport const FORM_COURSES_IS_ACTIVE = 'FORM_COURSES_IS_ACTIVE';\n\nconst loadStudentsSuccess = students => ({\n  type: LOAD_STUDENTS_SUCCESS, students,\n});\n\nconst loadCoursesSuccess = courses => ({\n  type: LOAD_COURSES_SUCCESS, courses,\n});\n\nexport const changeQueryCourse = queryCourse => ({\n  type: CHANGE_QUERY_COURSE, queryCourse,\n});\n\nexport const changeQueryStudent = queryStudent => ({\n  type: CHANGE_QUERY_STUDENT, queryStudent,\n});\n\nexport const deleteStudent = id => ({\n  type: DELETE_STUDENT, id,\n});\n\nexport const deleteCourse = id => ({\n  type: DELETE_COURSE, id,\n});\n\nexport const toggleForm = () => ({\n  type: FORM_IS_ACTIVE,\n});\n\nexport const toggleFormCourses = () => ({\n  type: FORM_COURSES_IS_ACTIVE,\n});\n\nexport const addNewStudent =  (name, email, isActive, course) => ({\n  type: ADD_NEW_STUDENT,\n  name,\n  email,\n  isActive,\n  course,\n  id: '_' + Math.random().toString(36).substr(2, 9),\n});\n\nexport const addNewCourse =  (course, id) => ({\n  type: ADD_NEW_COURSE, course, id\n});\n\nexport const loadData = () => async (dispatch) => {\n\n  const [\n    studentsFromServer,\n    coursesFromServer\n  ] = await Promise.all([\n    getStudents(),\n    getCourses(),\n  ]);\n\n  dispatch(loadStudentsSuccess(studentsFromServer.map(student => (\n    {\n      ...student,\n      course: coursesFromServer.find(course => course.course_id === student.course__id).course,\n      name: `${student.name.first} ${student.name.last} `\n    }))));\n\n  dispatch(loadCoursesSuccess(coursesFromServer));\n};\n","import {\n  LOAD_COURSES_SUCCESS,\n  DELETE_COURSE,\n  ADD_NEW_COURSE,\n} from './actions';\n\nexport const coursesReducer = (courses = '', action) => {\n  switch (action.type) {\n    case LOAD_COURSES_SUCCESS:\n      return action.courses;\n    case ADD_NEW_COURSE:\n      return [\n        {\n          course: action.course,\n          course_id: action.id,\n        },\n        ...courses,\n      ];\n    case DELETE_COURSE:\n      return courses.filter(course => course.course_id !== action.id);\n    default:\n      return courses;\n  }\n};\n","import { CHANGE_QUERY_COURSE } from './actions';\n\nexport const queryCoursesReducer = (queryCourse = '', action) => {\n  if (action.type === CHANGE_QUERY_COURSE) {\n    return action.queryCourse;\n  } else {\n    return queryCourse;\n  }\n};\n","import { CHANGE_QUERY_STUDENT } from './actions';\n\nexport const queryStudentsReducer = (queryStudent = '', action) => {\n  if (action.type === CHANGE_QUERY_STUDENT) {\n    return action.queryStudent;\n  } else {\n    return queryStudent;\n  }\n};\n","import { FORM_IS_ACTIVE } from '../store/actions';\n\nexport const isActiveFormReducer = (\n  isActiveForm = false, action\n) => {\n  if (action.type === FORM_IS_ACTIVE) {\n    return !isActiveForm;\n  } else {\n    return isActiveForm;\n  }\n};\n","import { FORM_COURSES_IS_ACTIVE } from '../store/actions';\n\nexport const isActiveCoursesFormReducer = (\n  isActiveFormCourses = false, action\n) => {\n  if (action.type === FORM_COURSES_IS_ACTIVE) {\n    return !isActiveFormCourses;\n  } else {\n    return isActiveFormCourses;\n  }\n};\n","import React from 'react';\n\nconst Home = () => {\n  return (\n    <div>\n      <h2>Home</h2>\n    </div>\n  );\n};\n\nexport default Home;\n","export const getStudents = state => state.students;\nexport const getCourses = state => state.courses;\nexport const getQueryCourse = state => state.queryCourse;\nexport const getQueryStudent = state => state.queryStudent;\nexport const getDeleteStudents = state => state.students;\nexport const getDeleteCourses = state => state.courses;\nexport const getIsActiveForm = state => state.isActiveForm;\nexport const getIsActiveCoursesForm = state => state.isActiveFormCourses;\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getDeleteCourses } from '../../store/selectors';\nimport { deleteCourse } from '../../store/actions';\n\nconst Course = ({ id, name, code, handleDeleteCourse }) => {\n  return(\n      <div className=\"table__row\">\n        <div\n          className=\"table__ceil\"\n        >\n          {name}</div>\n        <div className=\"table__ceil\">{code}</div>\n        <div className=\"table__ceil\">\n          <button\n            onClick={() => handleDeleteCourse(id)}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  courses: getDeleteCourses(state)\n});\n\nconst mapDispatchToProps = ({\n  handleDeleteCourse: deleteCourse\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Course);\n","import React from 'react';\nimport Course from '../course/course';\n\nconst CoursesList = ({courses}) => {\n  return(\n    <>\n      {\n        courses.map(course => (\n          <Course\n            name={course.course}\n            code={course.course_id.replace(/_/, '')}\n            key={course.course_id}\n            id={course.course_id}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default CoursesList;\n","import React, { useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { connect } from 'react-redux';\nimport CoursesList from '../coursesList/coursesList';\nimport {\n  getIsActiveCoursesForm,\n  getQueryCourse,\n} from '../../store/selectors';\nimport {\n  addNewCourse,\n  changeQueryCourse,\n  toggleFormCourses,\n} from '../../store/actions';\nimport {\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\n\nconst Courses = ({ courses, setQuery, queryCourse, setNewCourse, setIsActiveCoursesForm, isActiveFormCourses, setHasErrorCourse, hasErrorCourse}) => {\n  const [inputQuery, setInputQuery] = useState('');\n  const [nameValue, setNameValue] = useState('');\n  const [codeValue, setCodeValue] = useState('');\n  const location = useLocation();\n  const history = useHistory();\n\n  const debouncedSetQuery = debounce(setQuery, 1000);\n\n  const handleChangeQuery = (evt) => {\n    debouncedSetQuery(evt.target.value);\n    setInputQuery(evt.target.value);\n    searchParams.set('query', evt.target.value.trim().toLowerCase());\n    historyPush();\n  };\n\n  const historyPush = debounce(() => {\n    history.push({ search: searchParams.toString() });\n  }, 1000);\n\n  const coursesAfterQuery = !queryCourse\n    ? courses\n    : courses.filter(item => item.course.toLowerCase()\n        .includes(queryCourse.toLowerCase()));\n\n  const searchParams = new URLSearchParams(location.search);\n\n  let sortedCourses = '';\n\n  const sortParam = searchParams.get('sort');\n\n  if (sortParam) {\n    sortedCourses\n      = (typeof courses[0][sortParam] === 'number'\n      || typeof courses[0][sortParam] === 'boolean')\n      ? [...coursesAfterQuery]\n        .sort((a, b) => (a[sortParam] - b[sortParam])\n          * (searchParams.get('orderOfSorting') === 'asc' ? 1 : -1))\n      : [...coursesAfterQuery]\n        .sort((a, b) => (a[sortParam].localeCompare(b[sortParam]))\n          * (searchParams.get('orderOfSorting') === 'asc' ? 1 : -1));\n  } else {\n    sortedCourses = coursesAfterQuery;\n  }\n\n  const sortCourses = (param) => {\n    searchParams.set('sort', param);\n\n    if (searchParams.get('sort') === param\n      && searchParams.get('orderOfSorting') === 'asc') {\n      searchParams.set('orderOfSorting', 'desc');\n    } else {\n      searchParams.set('orderOfSorting', 'asc');\n    }\n\n    history.push({ search: searchParams.toString() });\n  };\n\n  const handlerFormSubmit = (event) => {\n    event.preventDefault();\n    if(!nameValue || !codeValue) {\n      return;\n    }\n    setNewCourse(nameValue, codeValue);\n\n  };\n\n  return (\n    <section>\n      {isActiveFormCourses ? (\n        <>\n          <button\n            onClick={setIsActiveCoursesForm}\n          >\n            formAdd\n          </button>\n          <form\n            onSubmit={handlerFormSubmit}\n          >\n            <label htmlFor=\"filter\">\n              <legend>\n                Course\n              </legend>\n              <input\n                id=\"filter\"\n                type=\"text\"\n                onChange={(event) => setNameValue(event.target.value)}\n                value={nameValue}\n                placeholder=\"Write here...\"\n              />\n            </label>\n\n            <label htmlFor=\"code\">\n              <legend>\n              Code\n              </legend>\n              <input\n                id=\"code\"\n                type=\"text\"\n                onChange={(event) => setCodeValue(event.target.value)}\n                placeholder=\"Write here...\"\n                value={codeValue}\n              />\n            </label>\n            <input\n              type=\"submit\"\n            />\n          </form>\n        </>\n      ) : (\n        <button\n          onClick={setIsActiveCoursesForm}\n        >\n          formAdd\n        </button>\n      )}\n      <input\n        type=\"text\"\n        value={inputQuery}\n        onChange={handleChangeQuery}\n      />\n      <div className=\"table\">\n\n          <div className=\"table__row\">\n            <div\n              className=\"table__ceil\"\n              onClick={() => sortCourses('course')}\n            >\n              Course\n            </div>\n            <div\n              className=\"table__ceil\"\n            >\n             Code\n            </div>\n            <div\n              className=\"table__ceil\"\n            >\n              Action\n            </div>\n          </div>\n\n          <CoursesList courses={sortedCourses}/>\n\n      </div>\n    </section>\n  );\n};\nconst mapStateToProps = state => ({\n  queryCourse: getQueryCourse(state),\n  courses: state.courses,\n  isActiveFormCourses: getIsActiveCoursesForm(state),\n});\n\nconst mapDispatchToProps = ({\n  setQuery: changeQueryCourse,\n  setIsActiveCoursesForm: toggleFormCourses,\n  setNewCourse: addNewCourse,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Courses);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteStudent } from '../../store/actions';\nimport { getDeleteStudents } from '../../store/selectors';\n\nconst Student = ({ id, name, email, status, course, deleteStu }) => {\n\n  return(\n    <div className=\"table__row\">\n      <div\n        className=\"table__ceil\"\n      >\n        {name}\n      </div>\n      <div\n        className=\"table__ceil\"\n      >\n        {email}\n      </div>\n      <div className=\"table__ceil\">{status ? 'Active' : 'Inactive'}</div>\n      <div className=\"table__ceil\">{course}</div>\n      <div className=\"table__ceil\">\n        <button\n          onClick={()=>{deleteStu(id)}}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  students: getDeleteStudents(state),\n});\n\nconst mapDispatchToProps = ({\n  deleteStu: deleteStudent,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Student);\n","import React from 'react';\nimport Student from '../student/student';\n\nconst StudentsList = ({students}) => {\n  return(\n    <>\n      {\n        students.map(student => (\n          <Student\n            name={student.name}\n            email={student.email}\n            status={student.isActive}\n            course={student.course}\n            id={student._id}\n            key={student._id}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default StudentsList;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport StudentsList from '../studentsList/StudentsList';\nimport debounce from 'lodash/debounce';\nimport { getIsActiveForm, getQueryStudent } from '../../store/selectors';\nimport { changeQueryStudent, addNewStudent, toggleForm } from '../../store/actions';\nimport {\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport './students.scss';\n\nconst Students = ({students, queryStudent, setQuery, setNewStudent, isActiveForm, setIsActiveForm }) => {\n  const [inputQuery, setInputQuery] = useState('');\n  const [nameValue, setNameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const [statusValue, setStatusValue] = useState('');\n  const [courseValue, setCourseValue] = useState('');\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const debouncedSetQuery = debounce(setQuery, 1000);\n\n  const handleChangeQuery = (evt) => {\n    debouncedSetQuery(evt.target.value);\n    setInputQuery(evt.target.value);\n    searchParams.set('query', evt.target.value.trim().toLowerCase());\n    historyPush();\n  };\n\n  const studentsAfterQuery = !queryStudent\n    ? students\n    : students.filter(item => item.name.toLowerCase()\n        .includes(queryStudent.toLowerCase()));\n\n  const searchParams = new URLSearchParams(location.search);\n\n  let sortedStudents = '';\n\n  const sortParam = searchParams.get('sort');\n\n  if (sortParam) {\n    sortedStudents\n      = (typeof students[0][sortParam] === 'number'\n      || typeof students[0][sortParam] === 'boolean')\n      ? [...studentsAfterQuery]\n        .sort((a, b) => (a[sortParam] - b[sortParam])\n          * (searchParams.get('orderOfSorting') === 'asc' ? 1 : -1))\n      : [...studentsAfterQuery]\n        .sort((a, b) => (a[sortParam].localeCompare(b[sortParam]))\n          * (searchParams.get('orderOfSorting') === 'asc' ? 1 : -1));\n  } else {\n    sortedStudents = studentsAfterQuery;\n  }\n\n  const historyPush = debounce(() => {\n    history.push({ search: searchParams.toString() });\n  }, 1000);\n\n  const sortStudents = (param) => {\n    searchParams.set('sort', param);\n\n    if (searchParams.get('sort') === param\n      && searchParams.get('orderOfSorting') === 'asc') {\n      searchParams.set('orderOfSorting', 'desc');\n    } else {\n      searchParams.set('orderOfSorting', 'asc');\n    }\n\n    history.push({ search: searchParams.toString() });\n  };\n\n  const handlerFormSubmit = (event) => {\n    event.preventDefault();\n    if(!nameValue || !emailValue || !statusValue || !courseValue) {\n      return;\n    }\n    setNewStudent(nameValue,emailValue,statusValue,courseValue);\n  };\n\n    return(\n    <section>\n\n      {isActiveForm ? (\n        <>\n          <button\n            onClick={setIsActiveForm}\n          >\n            formAdd\n          </button>\n        <form\n          onSubmit={handlerFormSubmit}\n        >\n          <label>\n            Name\n            <input\n              type=\"text\"\n              onChange={(event) => setNameValue(event.target.value)}\n              value={nameValue}\n              placeholder=\"Write here...\"\n            />\n          </label>\n\n          <label>\n            Email\n            <input\n              type=\"email\"\n              onChange={(event) => setEmailValue(event.target.value)}\n              placeholder=\"Write here...\"\n              value={emailValue}\n            />\n          </label>\n\n          <label>\n            Status\n            <input\n              onChange={(event) => setStatusValue(event.target.value)}\n              value={statusValue}\n              type=\"text\"\n              placeholder=\"Write here...\"\n            />\n          </label>\n\n          <label>\n            Course\n            <input\n              onChange={(event) => setCourseValue(event.target.value)}\n              value={courseValue}\n              type=\"text\"\n              placeholder=\"Write here...\"\n            />\n          </label>\n          <input\n            type=\"submit\"\n          />\n        </form>\n        </>\n      ) : (\n        <button\n          onClick={setIsActiveForm}\n        >\n          formAdd\n        </button>\n      )}\n\n      <input\n        type=\"text\"\n        value={inputQuery}\n        onChange={handleChangeQuery}\n      />\n\n      <div className=\"table\">\n\n        <div className=\"table__row\">\n          <div\n            onClick={() => sortStudents('name')}\n            className=\"table__ceil\"\n          >\n            Name\n          </div>\n          <div\n            onClick={() => sortStudents('email')}\n            className=\"table__ceil\"\n          >\n            Email\n          </div>\n          <div\n            onClick={() => sortStudents('isActive')}\n            className=\"table__ceil\"\n          >\n            Status\n          </div>\n          <div\n            onClick={() => sortStudents('course')}\n            className=\"table__ceil\"\n          >\n            Course\n          </div>\n          <div\n            className=\"table__ceil\"\n          >\n            Action\n          </div>\n        </div>\n\n        <StudentsList\n          students={sortedStudents}\n        />\n\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  queryStudent: getQueryStudent(state),\n  students: state.students,\n  isActiveForm: getIsActiveForm(state),\n});\n\nconst mapDispatchToProps = ({\n  setQuery: changeQueryStudent,\n  setNewStudent: addNewStudent,\n  setIsActiveForm: toggleForm,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Students);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport Home from './components/home/home';\nimport Courses from './components/courses/courses';\nimport Students from './components/students/students';\nimport { loadData} from './store/actions';\nimport { getStudents, getCourses } from './store/selectors';\nimport './App.scss';\n\nfunction App({loadStudentsAndCourses, students, courses }) {\n\n  useEffect( () => {\n    loadStudentsAndCourses();\n  }, []);\n\n  return (\n    <section>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <NavLink\n                to=\"/\"\n                className=\"nav__link\"\n              >\n                Home\n              </NavLink>\n            </li>\n\n            <li>\n              <NavLink\n                to=\"/courses\"\n                className=\"nav__link\"\n                courses={courses}\n              >\n                Courses\n              </NavLink>\n            </li>\n\n            <li>\n              <NavLink\n                to=\"/students\"\n                className=\"nav__link\"\n              >\n                Students\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Route path=\"/courses\">\n            <Courses\n              courses={courses}\n            />\n          </Route>\n\n          <Route path=\"/students\">\n            <Students\n              students={students}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps  = state => ({\n  students: getStudents(state),\n  courses: getCourses(state),\n});\nconst mapDispatchToProps = ({\n  loadStudentsAndCourses: loadData,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","export const getStudents = () => fetch('https://api.myjson.com/bins/lhxgm')\n  .then(response => response.json())\n  .catch(() => 'Something wrong');\n\nexport const getCourses = () => fetch('https://api.myjson.com/bins/1gocva')\n  .then(response => response.json())\n  .catch(() => 'Something wrong');\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/index';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/path\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}